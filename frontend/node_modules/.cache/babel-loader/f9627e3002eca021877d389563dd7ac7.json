{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/Desktop/project/web_dev/chat_app/frontend/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function for sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/gaurav/Desktop/project/web_dev/chat_app/frontend/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log","target","value","key"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\n\nlet socket;\n\nconst Chat = ( {location} ) => {\n    const [name , setName] = useState('');\n    const [room , setRoom] = useState('');\n    const [message , setMessage] = useState('');\n    const [messages , setMessages] = useState([]);\n    const ENDPOINT='localhost:5000';\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n        socket=io(ENDPOINT);\n        \n        setName(name);\n        setRoom(room);\n        \n        socket.emit('join',{ name, room },()=>{\n            \n        });\n\n        return ()=>{\n            socket.emit('disconnect');\n            socket.off();\n        }\n\n    },\n    [ENDPOINT,location.search]\n    );\n\n    useEffect(()=>{\n        socket.on('message',(message)=>{\n            setMessages([...messages,message]);\n        })\n    },[messages]);\n\n    //function for sending messages\n    const sendMessage = (event)=>{\n        event.preventDefault();\n\n        if(message){\n            socket.emit('sendMessage',message,()=>setMessage(''));\n        }\n    }\n    console.log(message,messages);\n\n    return (\n        <div className='outerContainer'>\n            <div className='container'>\n                <InfoBar room={room}/>\n                <Input />\n                <input value={message} onChange={ (event)=>setMessage(event.target.value)} onKeyPress={(event)=>event.key==='Enter'? sendMessage(event): null }/>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}